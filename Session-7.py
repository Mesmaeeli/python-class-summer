Python 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> from numpy import *

>>> a1 = array([1,2,4,6])
>>> a1
array([1, 2, 4, 6])
>>> type(a1)
<class 'numpy.ndarray'>
>>> a1
array([1, 2, 4, 6])
>>> a2 = array([6,3,6,8])
>>> a2
array([6, 3, 6, 8])
>>> l1 = [6,5,6,0]
>>> l2 = [4,2,4,8]
>>> l1 + l2
[6, 5, 6, 0, 4, 2, 4, 8]
>>> a1 * a2
array([ 6,  6, 24, 48])
>>> a1 + a2
array([ 7,  5, 10, 14])
>>> a1 * a2
array([ 6,  6, 24, 48])
>>> a1 ** a2
array([      1,       8,    4096, 1679616], dtype=int32)
>>> a1.dtype
dtype('int32')
>>> a1.shape
(4,)
>>> a1
array([1, 2, 4, 6])
>>> a.size
Traceback (most recent call last):
  File "<pyshell#17>", line 1, in <module>
    a.size
NameError: name 'a' is not defined
>>> a1.size
4
>>> a1.ndim
1
>>> a1
array([1, 2, 4, 6])
>>> a1[3]
6
>>> a1[3] = 100
>>> a1
array([  1,   2,   4, 100])
>>> a1.fill(255)
>>> a1
array([255, 255, 255, 255])
>>> a1.dtype
dtype('int32')
>>> a1
array([255, 255, 255, 255])
>>> a1[2] = 10.6
>>> a1
array([255, 255,  10, 255])
>>> a1.fill(10.6)
>>> a1
array([10, 10, 10, 10])
>>> a3 = array((3,4,6))
>>> a3
array([3, 4, 6])
>>> a4 = array([5,3,6,8,9,3,2,5,7,2])
>>> a4[1:3]
array([3, 6])
>>> a4[1:7]
array([3, 6, 8, 9, 3, 2])
>>> a4[-4:7]
array([2])
>>> a4[:4]
array([5, 3, 6, 8])
>>> a4[4:]
array([9, 3, 2, 5, 7, 2])
>>> a4[4::2]
array([9, 2, 7])
>>> a4.shape
(10,)
>>> a5 = array([[5,7,2],[1,0,4]])
>>> a5
array([[5, 7, 2],
       [1, 0, 4]])
>>> a5.shape
(2, 3)
>>> a5.size
6
>>> a5.ndim
2
>>> l3 = [[5,7,2],[1,0,4]]
>>> l3[1][1]
0
>>> a5[1][1]
0
>>> a5[1,1]
0
>>> a4
array([5, 3, 6, 8, 9, 3, 2, 5, 7, 2])
>>> b1 = a4[3,7]
Traceback (most recent call last):
  File "<pyshell#53>", line 1, in <module>
    b1 = a4[3,7]
IndexError: too many indices for array
>>> b1 = a4[3:7]
>>> b1
array([8, 9, 3, 2])
>>> b1[1] = 10
>>> b1
array([ 8, 10,  3,  2])
>>> a4
array([ 5,  3,  6,  8, 10,  3,  2,  5,  7,  2])
>>> index = [1,4,7]
>>> a4[index]
array([ 3, 10,  5])
>>> a4
array([ 5,  3,  6,  8, 10,  3,  2,  5,  7,  2])
>>> a5
array([[5, 7, 2],
       [1, 0, 4]])
>>> a5[[0,1],[0,1]]
array([5, 0])
>>> a4
array([ 5,  3,  6,  8, 10,  3,  2,  5,  7,  2])
>>> where(a4 % 2 == 0)
(array([2, 3, 4, 6, 9], dtype=int64),)
>>> a4[where(a4 % 2 == 0)]
array([ 6,  8, 10,  2,  2])
>>> a4[[2,3,4,6,9]]
array([ 6,  8, 10,  2,  2])
>>> a5
array([[5, 7, 2],
       [1, 0, 4]])
>>> where(a5 % 2 == 0)
(array([0, 1, 1], dtype=int64), array([2, 1, 2], dtype=int64))
>>> a5[where(a5 % 2 == 0)]
array([2, 0, 4])
>>> a4
array([ 5,  3,  6,  8, 10,  3,  2,  5,  7,  2])
>>> a4 % 2 == 0
array([False, False,  True,  True,  True, False,  True, False, False,
        True])
>>> a4 > 3
array([ True, False,  True,  True,  True, False, False,  True,  True,
       False])
>>> l1
[6, 5, 6, 0]
>>> l1 > 4
Traceback (most recent call last):
  File "<pyshell#79>", line 1, in <module>
    l1 > 4
TypeError: '>' not supported between instances of 'list' and 'int'
>>> a5
array([[5, 7, 2],
       [1, 0, 4]])
>>> a5.shape
(2, 3)
>>> a5.reshape(3,2)
array([[5, 7],
       [2, 1],
       [0, 4]])
>>> a5
array([[5, 7, 2],
       [1, 0, 4]])
>>> a5 = a5.reshape(3,2)
>>> a5
array([[5, 7],
       [2, 1],
       [0, 4]])
>>> a5.reshape(5,2)
Traceback (most recent call last):
  File "<pyshell#86>", line 1, in <module>
    a5.reshape(5,2)
ValueError: cannot reshape array of size 6 into shape (5,2)
>>> a6 = array([[5,3,6],[10,4,2],[11,8,0]])
>>> a6
array([[ 5,  3,  6],
       [10,  4,  2],
       [11,  8,  0]])
>>> a6.diagonal()
array([5, 4, 0])
>>> a6.diagonal(offset = 1)
array([3, 2])
>>> a6.diagonal(offset = 2)
array([6])
>>> a6.diagonal(offset = -1)
array([10,  8])
>>> a6.diagonal(offset = -2)
array([11])
>>> a7 = array([5,3,6,10.2],dtype = 'float32')
>>> a7
array([ 5. ,  3. ,  6. , 10.2], dtype=float32)
>>> a7.astype('int32')
array([ 5,  3,  6, 10])
>>> 
=============================== RESTART: Shell ===============================
>>> import numpy as np
>>> a7 = array([[5,3,6,10],[2,7,8,2]])
Traceback (most recent call last):
  File "<pyshell#98>", line 1, in <module>
    a7 = array([[5,3,6,10],[2,7,8,2]])
NameError: name 'array' is not defined
>>> a7 = np.array([[5,3,6,10],[2,7,8,2]])
>>> a7
array([[ 5,  3,  6, 10],
       [ 2,  7,  8,  2]])
>>> np.sum(a7)
43
>>> a7.sum()
43
>>> np.sum(a7,axis = 0)
array([ 7, 10, 14, 12])
>>> np.sum(a7, axis = 1)
array([24, 19])
>>> a8 = np.array([[[6,6,6,6,6],[7,7,7,7,7],[8,8,8,8,8],[9,9,9,9,9],[0,0,0,0,0]],[[5,5,5,5,5],[4,4,4,4,4],[3,3,3,3,3],[2,2,2,2,2],[1,1,1,1,1]]])
>>> a8
array([[[6, 6, 6, 6, 6],
        [7, 7, 7, 7, 7],
        [8, 8, 8, 8, 8],
        [9, 9, 9, 9, 9],
        [0, 0, 0, 0, 0]],

       [[5, 5, 5, 5, 5],
        [4, 4, 4, 4, 4],
        [3, 3, 3, 3, 3],
        [2, 2, 2, 2, 2],
        [1, 1, 1, 1, 1]]])
>>> a8.shape
(2, 5, 5)
>>> a8.ndim
3
>>> np.sum(a8)
225
>>> np.sum(a8,axis = 0)
array([[11, 11, 11, 11, 11],
       [11, 11, 11, 11, 11],
       [11, 11, 11, 11, 11],
       [11, 11, 11, 11, 11],
       [ 1,  1,  1,  1,  1]])
>>> np.sum(a8,axis = 1)
array([[30, 30, 30, 30, 30],
       [15, 15, 15, 15, 15]])
>>> np.sum(a8,axis = 2)
array([[30, 35, 40, 45,  0],
       [25, 20, 15, 10,  5]])
>>> a8
array([[[6, 6, 6, 6, 6],
        [7, 7, 7, 7, 7],
        [8, 8, 8, 8, 8],
        [9, 9, 9, 9, 9],
        [0, 0, 0, 0, 0]],

       [[5, 5, 5, 5, 5],
        [4, 4, 4, 4, 4],
        [3, 3, 3, 3, 3],
        [2, 2, 2, 2, 2],
        [1, 1, 1, 1, 1]]])
>>> np.sum(a8,axis = 3)
Traceback (most recent call last):
  File "<pyshell#114>", line 1, in <module>
    np.sum(a8,axis = 3)
  File "C:\Users\esmae\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 2076, in sum
    initial=initial)
  File "C:\Users\esmae\AppData\Local\Programs\Python\Python36\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 3 is out of bounds for array of dimension 3
>>> np.min(a8)
0
>>> np.min(a8,axis = -1)
array([[6, 7, 8, 9, 0],
       [5, 4, 3, 2, 1]])
>>> np.min(a8,axis = -2)
array([[0, 0, 0, 0, 0],
       [1, 1, 1, 1, 1]])
>>> np.min(a8,axis = -3)
array([[5, 5, 5, 5, 5],
       [4, 4, 4, 4, 4],
       [3, 3, 3, 3, 3],
       [2, 2, 2, 2, 2],
       [0, 0, 0, 0, 0]])
>>> np.mean(a8)
4.5
>>> np.sum(a8)
225
>>> np.size(a8)
50
>>> 225/50
4.5
>>> np.mean(a8,axis = -1)
array([[6., 7., 8., 9., 0.],
       [5., 4., 3., 2., 1.]])
>>> a8
array([[[6, 6, 6, 6, 6],
        [7, 7, 7, 7, 7],
        [8, 8, 8, 8, 8],
        [9, 9, 9, 9, 9],
        [0, 0, 0, 0, 0]],

       [[5, 5, 5, 5, 5],
        [4, 4, 4, 4, 4],
        [3, 3, 3, 3, 3],
        [2, 2, 2, 2, 2],
        [1, 1, 1, 1, 1]]])
>>> a8.shape
(2, 5, 5)
>>> a8[0,2,0]
8
>>> a9 = a8[:,:3,:]
>>> a9
array([[[6, 6, 6, 6, 6],
        [7, 7, 7, 7, 7],
        [8, 8, 8, 8, 8]],

       [[5, 5, 5, 5, 5],
        [4, 4, 4, 4, 4],
        [3, 3, 3, 3, 3]]])
>>> a9 = a8[0,:3,:]
>>> a9
array([[6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7],
       [8, 8, 8, 8, 8]])
>>> np.min(a9)
6
>>> np.var(a8)
8.25
>>> np.var(a8,axis = -1)
array([[0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])
>>> np.var(a8,axis = -2)
array([[10., 10., 10., 10., 10.],
       [ 2.,  2.,  2.,  2.,  2.]])
>>> np.std(a8)
2.8722813232690143
>>> np.std(a8,axis = -1)
array([[0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])
>>> np.std(a8,axis = -2)
array([[3.16227766, 3.16227766, 3.16227766, 3.16227766, 3.16227766],
       [1.41421356, 1.41421356, 1.41421356, 1.41421356, 1.41421356]])
>>> np.std(a8,axis = -3)
array([[0.5, 0.5, 0.5, 0.5, 0.5],
       [1.5, 1.5, 1.5, 1.5, 1.5],
       [2.5, 2.5, 2.5, 2.5, 2.5],
       [3.5, 3.5, 3.5, 3.5, 3.5],
       [0.5, 0.5, 0.5, 0.5, 0.5]])
>>> a10 = np.array([2,3,6,2,6,0,2,6,8,3,5,810,220,467,24,26,4]_
		   
SyntaxError: invalid syntax
>>> a10 = np.array([2,3,6,2,6,0,2,6,8,3,5,810,220,467,24,26,4])
		   
>>> np.clip(a10,3,15)
		   
array([ 3,  3,  6,  3,  6,  3,  3,  6,  8,  3,  5, 15, 15, 15, 15, 15,  4])
>>> a11 = np.array([4.1,2.3,9.5,2.5])
		   
>>> a11
		   
array([4.1, 2.3, 9.5, 2.5])
>>> a11.round()
		   
array([ 4.,  2., 10.,  2.])
>>> a11 = np.array([4.1,2.3,9.5,3.5])
		   
>>> a11.round()
		   
array([ 4.,  2., 10.,  4.])
>>> a12 = np.array([4.15,3.85,9.23,10.11,10.05])
		   
>>> a12
		   
array([ 4.15,  3.85,  9.23, 10.11, 10.05])
>>> a12.round(decimals = 1)
		   
array([ 4.2,  3.8,  9.2, 10.1, 10. ])
>>> a13 = np.arange(100)
		   
>>> a13
		   
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
       85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])
>>> a13.shape
		   
(100,)
>>> a14 = np.arange(20,100)
		   
>>> a14
		   
array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
       37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
       54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
       71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,
       88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])
>>> a15 = np.arange(20,100,5)
		   
>>> a15
		   
array([20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95])
>>> a16 = np.arange(1.5,2.5,0.3)
		   
>>> a16
		   
array([1.5, 1.8, 2.1, 2.4])
>>> np.pi
		   
3.141592653589793
>>> a17 = np.arange(0, 2 * np.pi, 0.2)
		   
>>> a17
		   
array([0. , 0.2, 0.4, 0.6, 0.8, 1. , 1.2, 1.4, 1.6, 1.8, 2. , 2.2, 2.4,
       2.6, 2.8, 3. , 3.2, 3.4, 3.6, 3.8, 4. , 4.2, 4.4, 4.6, 4.8, 5. ,
       5.2, 5.4, 5.6, 5.8, 6. , 6.2])
>>> a8
		   
array([[[6, 6, 6, 6, 6],
        [7, 7, 7, 7, 7],
        [8, 8, 8, 8, 8],
        [9, 9, 9, 9, 9],
        [0, 0, 0, 0, 0]],

       [[5, 5, 5, 5, 5],
        [4, 4, 4, 4, 4],
        [3, 3, 3, 3, 3],
        [2, 2, 2, 2, 2],
        [1, 1, 1, 1, 1]]])
>>> a18 = np.arange(24)
		   
>>> a18
		   
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23])
>>> a18.reshape(2,3,4)
		   
array([[[ 0,  1,  2,  3],
        [ 4,  5,  6,  7],
        [ 8,  9, 10, 11]],

       [[12, 13, 14, 15],
        [16, 17, 18, 19],
        [20, 21, 22, 23]]])
>>> a18.reshape(2,3,5)
		   
Traceback (most recent call last):
  File "<pyshell#166>", line 1, in <module>
    a18.reshape(2,3,5)
ValueError: cannot reshape array of size 24 into shape (2,3,5)
>>> a18
		   
array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20, 21, 22, 23])
>>> a18 = a18.reshape(2,3,5)
		   
Traceback (most recent call last):
  File "<pyshell#168>", line 1, in <module>
    a18 = a18.reshape(2,3,5)
ValueError: cannot reshape array of size 24 into shape (2,3,5)
>>> a18 = a18.reshape(2,3,4)
		   
>>> a18
		   
array([[[ 0,  1,  2,  3],
        [ 4,  5,  6,  7],
        [ 8,  9, 10, 11]],

       [[12, 13, 14, 15],
        [16, 17, 18, 19],
        [20, 21, 22, 23]]])
>>> np.min(a18)
		   
0
>>> np.min(a18,axis = -1)
		   
array([[ 0,  4,  8],
       [12, 16, 20]])
>>> np.max(a18,axis = -2)
		   
array([[ 8,  9, 10, 11],
       [20, 21, 22, 23]])
>>> np.mean(a18,axis = -3)
		   
array([[ 6.,  7.,  8.,  9.],
       [10., 11., 12., 13.],
       [14., 15., 16., 17.]])
>>> a19 = np.arange(48)
		   
>>> a19.reshape(2,2,3,4)
		   
array([[[[ 0,  1,  2,  3],
         [ 4,  5,  6,  7],
         [ 8,  9, 10, 11]],

        [[12, 13, 14, 15],
         [16, 17, 18, 19],
         [20, 21, 22, 23]]],


       [[[24, 25, 26, 27],
         [28, 29, 30, 31],
         [32, 33, 34, 35]],

        [[36, 37, 38, 39],
         [40, 41, 42, 43],
         [44, 45, 46, 47]]]])
>>> a20 = np.zeros(2,3)
		   
Traceback (most recent call last):
  File "<pyshell#177>", line 1, in <module>
    a20 = np.zeros(2,3)
TypeError: data type not understood
>>> a20 = np.zeros((2,3))
		   
>>> a20
		   
array([[0., 0., 0.],
       [0., 0., 0.]])
>>> a21 = np.ones((5,5))
		   
>>> a21
		   
array([[1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.]])
>>> a22 = np.ones((5,5),dtype = 'int8')
		   
>>> a22
		   
array([[1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1]], dtype=int8)
>>> a23 = np.identity(5)
		   
>>> a23
		   
array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]])
>>> a22[0,0] = 444444444
		   
>>> a22
		   
array([[28,  1,  1,  1,  1],
       [ 1,  1,  1,  1,  1],
       [ 1,  1,  1,  1,  1],
       [ 1,  1,  1,  1,  1],
       [ 1,  1,  1,  1,  1]], dtype=int8)
>>> np.empty((2,2))
		   
array([[1.90979621e-313, 2.33419537e-313],
       [4.45619116e-313, 4.88059032e-313]])
>>> np.linspace(0, 2 * np.pi , 100)
		   
array([0.        , 0.06346652, 0.12693304, 0.19039955, 0.25386607,
       0.31733259, 0.38079911, 0.44426563, 0.50773215, 0.57119866,
       0.63466518, 0.6981317 , 0.76159822, 0.82506474, 0.88853126,
       0.95199777, 1.01546429, 1.07893081, 1.14239733, 1.20586385,
       1.26933037, 1.33279688, 1.3962634 , 1.45972992, 1.52319644,
       1.58666296, 1.65012947, 1.71359599, 1.77706251, 1.84052903,
       1.90399555, 1.96746207, 2.03092858, 2.0943951 , 2.15786162,
       2.22132814, 2.28479466, 2.34826118, 2.41172769, 2.47519421,
       2.53866073, 2.60212725, 2.66559377, 2.72906028, 2.7925268 ,
       2.85599332, 2.91945984, 2.98292636, 3.04639288, 3.10985939,
       3.17332591, 3.23679243, 3.30025895, 3.36372547, 3.42719199,
       3.4906585 , 3.55412502, 3.61759154, 3.68105806, 3.74452458,
       3.8079911 , 3.87145761, 3.93492413, 3.99839065, 4.06185717,
       4.12532369, 4.1887902 , 4.25225672, 4.31572324, 4.37918976,
       4.44265628, 4.5061228 , 4.56958931, 4.63305583, 4.69652235,
       4.75998887, 4.82345539, 4.88692191, 4.95038842, 5.01385494,
       5.07732146, 5.14078798, 5.2042545 , 5.26772102, 5.33118753,
       5.39465405, 5.45812057, 5.52158709, 5.58505361, 5.64852012,
       5.71198664, 5.77545316, 5.83891968, 5.9023862 , 5.96585272,
       6.02931923, 6.09278575, 6.15625227, 6.21971879, 6.28318531])
>>> np.linspace(0, 2 * np.pi , 10)
		   
array([0.        , 0.6981317 , 1.3962634 , 2.0943951 , 2.7925268 ,
       3.4906585 , 4.1887902 , 4.88692191, 5.58505361, 6.28318531])
>>> np.logspace(0,1,5)
		   
array([ 1.        ,  1.77827941,  3.16227766,  5.62341325, 10.        ])
>>> np.pi
		   
3.141592653589793
>>> np.random.rand()
		   
0.4058278664364382
>>> np.random.randint()
		   
Traceback (most recent call last):
  File "<pyshell#194>", line 1, in <module>
    np.random.randint()
  File "mtrand.pyx", line 910, in mtrand.RandomState.randint
TypeError: randint() takes at least 1 positional argument (0 given)
>>> np.random.randint(10)
		   
4
>>> np.random.rand(3,2)
		   
array([[0.80134565, 0.82801374],
       [0.31896639, 0.18629321],
       [0.64240834, 0.35146875]])
>>> a24 = np.random.rand(3,2)
		   
>>> a24
		   
array([[0.5501218 , 0.68175422],
       [0.42646113, 0.39638435],
       [0.23751278, 0.70192519]])
>>> a24 * 10
		   
array([[5.50121799, 6.81754223],
       [4.26461133, 3.96384347],
       [2.37512783, 7.01925193]])
>>> np.random.rand(5,5)
		   
array([[9.63528218e-01, 5.88517361e-01, 3.04123964e-01, 1.69794788e-01,
        2.54718828e-01],
       [2.85967463e-01, 6.25823533e-01, 3.06907576e-01, 8.60370372e-01,
        5.93075980e-01],
       [5.70844741e-01, 1.88025267e-01, 2.24234967e-01, 4.04729429e-03,
        5.55208743e-01],
       [7.87829525e-02, 3.26408644e-01, 3.08434956e-01, 4.59838004e-03,
        3.27339789e-02],
       [5.40063354e-01, 4.13622427e-04, 6.96994172e-01, 9.24296791e-01,
        2.75353662e-01]])
>>> dict1 = {1:'yek',2:'do',3:'se'}
		   
>>> dict1.items()
		   
dict_items([(1, 'yek'), (2, 'do'), (3, 'se')])
>>> m = dict1.items()
		   
>>> m[0]
		   
Traceback (most recent call last):
  File "<pyshell#204>", line 1, in <module>
    m[0]
TypeError: 'dict_items' object does not support indexing
>>> list(m)
		   
[(1, 'yek'), (2, 'do'), (3, 'se')]
>>> m = list(m)
		   
>>> m
		   
[(1, 'yek'), (2, 'do'), (3, 'se')]
>>> dict2 = {}
		   
>>> for i,j in m:
		   dict2{j} = i
		   
SyntaxError: invalid syntax
>>> 
		   
>>> for i,j in m:
		   dict2[j] = i

		   
>>> dict2
		   
{'yek': 1, 'do': 2, 'se': 3}
>>> dict1
		   
{1: 'yek', 2: 'do', 3: 'se'}
>>> 
		   
>>> 
		   
>>> import matplotlib.pyplot as plt
		   
>>> x = np.linspace(0,2 * np.pi,100)
		   
>>> y = np.sin(x)
		   
>>> y
		   
array([ 0.00000000e+00,  6.34239197e-02,  1.26592454e-01,  1.89251244e-01,
        2.51147987e-01,  3.12033446e-01,  3.71662456e-01,  4.29794912e-01,
        4.86196736e-01,  5.40640817e-01,  5.92907929e-01,  6.42787610e-01,
        6.90079011e-01,  7.34591709e-01,  7.76146464e-01,  8.14575952e-01,
        8.49725430e-01,  8.81453363e-01,  9.09631995e-01,  9.34147860e-01,
        9.54902241e-01,  9.71811568e-01,  9.84807753e-01,  9.93838464e-01,
        9.98867339e-01,  9.99874128e-01,  9.96854776e-01,  9.89821442e-01,
        9.78802446e-01,  9.63842159e-01,  9.45000819e-01,  9.22354294e-01,
        8.95993774e-01,  8.66025404e-01,  8.32569855e-01,  7.95761841e-01,
        7.55749574e-01,  7.12694171e-01,  6.66769001e-01,  6.18158986e-01,
        5.67059864e-01,  5.13677392e-01,  4.58226522e-01,  4.00930535e-01,
        3.42020143e-01,  2.81732557e-01,  2.20310533e-01,  1.58001396e-01,
        9.50560433e-02,  3.17279335e-02, -3.17279335e-02, -9.50560433e-02,
       -1.58001396e-01, -2.20310533e-01, -2.81732557e-01, -3.42020143e-01,
       -4.00930535e-01, -4.58226522e-01, -5.13677392e-01, -5.67059864e-01,
       -6.18158986e-01, -6.66769001e-01, -7.12694171e-01, -7.55749574e-01,
       -7.95761841e-01, -8.32569855e-01, -8.66025404e-01, -8.95993774e-01,
       -9.22354294e-01, -9.45000819e-01, -9.63842159e-01, -9.78802446e-01,
       -9.89821442e-01, -9.96854776e-01, -9.99874128e-01, -9.98867339e-01,
       -9.93838464e-01, -9.84807753e-01, -9.71811568e-01, -9.54902241e-01,
       -9.34147860e-01, -9.09631995e-01, -8.81453363e-01, -8.49725430e-01,
       -8.14575952e-01, -7.76146464e-01, -7.34591709e-01, -6.90079011e-01,
       -6.42787610e-01, -5.92907929e-01, -5.40640817e-01, -4.86196736e-01,
       -4.29794912e-01, -3.71662456e-01, -3.12033446e-01, -2.51147987e-01,
       -1.89251244e-01, -1.26592454e-01, -6.34239197e-02, -2.44929360e-16])
>>> plt.plot(x,y)
		   
[<matplotlib.lines.Line2D object at 0x000002AD38E13D30>]
>>> plt.show()
		   
>>> x = np.linspace(0,2 * np.pi,10)
		   
>>> y = np.sin(x)
		   
>>> plt.plot(x,y)
		   
[<matplotlib.lines.Line2D object at 0x000002AD398AD358>]
>>> plt.show()
		   
>>> plt.plot(np.sin(x))
		   
[<matplotlib.lines.Line2D object at 0x000002AD3B5E5908>]
>>> plt.show()
		   
>>> plt.plot(x,np.sin(x),x,np.cos(x))
		   
[<matplotlib.lines.Line2D object at 0x000002AD3B78B320>, <matplotlib.lines.Line2D object at 0x000002AD3B78B4A8>]
>>> plt.show()
		   
>>> 
== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==
>>> 
== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==

== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==

== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==
>>> 
== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==

== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==

== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==

== RESTART: C:/Users/esmae/AppData/Local/Programs/Python/Python36/p12-s6.py ==
>>> pow(2,3)
		   
8
>>> 
